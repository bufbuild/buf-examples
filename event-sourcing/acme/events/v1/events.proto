syntax = "proto3";

package acme.events.v1;

import "google/protobuf/timestamp.proto";

// Entities
message Order {
  string order_id = 1;
  Product product = 2;
  float price = 3;
}

message Product {
  string product_id = 1;
  string vendor_name = 2;
  string vendor_address = 3;
}

// Event types
message OrderPlaced {
  Order order = 1;
}

message OrderPaid {
  Order order = 1;
}

message ProductAdded {
  Product product = 1;
}

message ProductRemoved {
  Product product = 1;
}

// Core event type
message Event {
  // A unique ID for the event
  string event_id = 1;
  // The time of the event
  google.protobuf.Timestamp event_time = 2;
  // Arbitrary metadata attached to the event
  map<string,string> event_metadata = 3;
  // The source of the event
  Source event_source = 4;
  // The event
  oneof event {
    OrderPlaced order_placed = 5;
    OrderPaid order_paid = 6;
    ProductAdded product_added = 7;
    ProductRemoved product_removed = 8;
  }
}

// Info about the source emitting the event
message Source {
  string source_id = 1;
  string source_url = 2;
}

// Event service
service EventService {
  rpc HandleEvent(HandleEventRequest) returns (HandleEventResponse);
}

// Service request
message HandleEventRequest {
  Event event = 1;
  Source source = 2;
}

// Service response
message HandleEventResponse {
  enum ErrorCode {
    ERROR_CODE_UNSPECIFIED = 0;
    // The event emitter source is unknown to the handler
    ERROR_CODE_SOURCE_UNKNOWN = 1;
    // This event is missing required information
    ERROR_CODE_MALFORMED_EVENT = 2;
    // This event has already been handled
    ERROR_CODE_ALREADY_EXISTS = 3;
  }

  // Provide a transaction ID if successful
  string transaction_id = 1;
  // Provide error information if not successful
  string error_message = 2;
  ErrorCode error_code = 3;
}
