// Copyright 2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: bufbuild/people/v1/predefined_string_rules.proto

package peoplev1

import (
	validate "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var file_bufbuild_people_v1_predefined_string_rules_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*validate.StringRules)(nil),
		ExtensionType: (*bool)(nil),
		Field:         80048952,
		Name:          "bufbuild.people.v1.required_medium",
		Tag:           "varint,80048952,opt,name=required_medium",
		Filename:      "bufbuild/people/v1/predefined_string_rules.proto",
	},
	{
		ExtendedType:  (*validate.StringRules)(nil),
		ExtensionType: (*bool)(nil),
		Field:         80048953,
		Name:          "bufbuild.people.v1.optional_medium",
		Tag:           "varint,80048953,opt,name=optional_medium",
		Filename:      "bufbuild/people/v1/predefined_string_rules.proto",
	},
	{
		ExtendedType:  (*validate.StringRules)(nil),
		ExtensionType: (*int32)(nil),
		Field:         80048954,
		Name:          "bufbuild.people.v1.required_with_max",
		Tag:           "varint,80048954,opt,name=required_with_max",
		Filename:      "bufbuild/people/v1/predefined_string_rules.proto",
	},
}

// Extension fields to validate.StringRules.
var (
	// optional bool required_medium = 80048952;
	E_RequiredMedium = &file_bufbuild_people_v1_predefined_string_rules_proto_extTypes[0]
	// optional bool optional_medium = 80048953;
	E_OptionalMedium = &file_bufbuild_people_v1_predefined_string_rules_proto_extTypes[1]
	// optional int32 required_with_max = 80048954;
	E_RequiredWithMax = &file_bufbuild_people_v1_predefined_string_rules_proto_extTypes[2]
)

var File_bufbuild_people_v1_predefined_string_rules_proto protoreflect.FileDescriptor

var file_bufbuild_people_v1_predefined_string_rules_proto_rawDesc = string([]byte{
	0x0a, 0x30, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x65, 0x6f, 0x70, 0x6c,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x65, 0x6f,
	0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x3a, 0xbf, 0x01, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x19, 0x2e, 0x62, 0x75, 0x66, 0x2e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0xb8, 0xe6, 0x95, 0x26, 0x20, 0x01, 0x28, 0x08, 0x42, 0x78, 0xc2, 0x48, 0x75,
	0x0a, 0x73, 0x0a, 0x16, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x33, 0x74, 0x68, 0x69, 0x73,
	0x20, 0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64,
	0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x35, 0x30, 0x20, 0x6f, 0x72, 0x20, 0x66,
	0x65, 0x77, 0x65, 0x72, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0x24, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x30,
	0x20, 0x26, 0x26, 0x20, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20,
	0x3c, 0x3d, 0x20, 0x35, 0x30, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4d,
	0x65, 0x64, 0x69, 0x75, 0x6d, 0x3a, 0x9c, 0x01, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x19, 0x2e, 0x62, 0x75, 0x66, 0x2e,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0xb9, 0xe6, 0x95, 0x26, 0x20, 0x01, 0x28, 0x08, 0x42, 0x55, 0xc2,
	0x48, 0x52, 0x0a, 0x50, 0x0a, 0x16, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x23, 0x74, 0x68,
	0x69, 0x73, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x35, 0x30, 0x20, 0x6f, 0x72,
	0x20, 0x66, 0x65, 0x77, 0x65, 0x72, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x1a, 0x11, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c,
	0x3d, 0x20, 0x35, 0x30, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x65,
	0x64, 0x69, 0x75, 0x6d, 0x3a, 0xa8, 0x02, 0x0a, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6d, 0x61, 0x78, 0x12, 0x19, 0x2e, 0x62, 0x75, 0x66,
	0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x18, 0xba, 0xe6, 0x95, 0x26, 0x20, 0x01, 0x28, 0x05, 0x42, 0xdd,
	0x01, 0xc2, 0x48, 0xd9, 0x01, 0x0a, 0xd6, 0x01, 0x0a, 0x13, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x2e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2e, 0x6d, 0x61, 0x78, 0x1a, 0xbe, 0x01,
	0x28, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x20, 0x3e,
	0x20, 0x30, 0x20, 0x26, 0x26, 0x20, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x6d, 0x61, 0x78, 0x5f,
	0x6c, 0x65, 0x6e, 0x20, 0x3e, 0x20, 0x30, 0x29, 0x20, 0x7c, 0x7c, 0x20, 0x28, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3e, 0x20, 0x30, 0x20, 0x26, 0x26, 0x20,
	0x74, 0x68, 0x69, 0x73, 0x2e, 0x73, 0x69, 0x7a, 0x65, 0x28, 0x29, 0x20, 0x3c, 0x3d, 0x20, 0x72,
	0x75, 0x6c, 0x65, 0x29, 0x3f, 0x20, 0x27, 0x27, 0x3a, 0x20, 0x27, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x69, 0x73, 0x20, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x20, 0x61, 0x6e, 0x64, 0x20,
	0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x27, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x28, 0x72, 0x75, 0x6c, 0x65, 0x29, 0x20, 0x2b, 0x20, 0x27, 0x20, 0x6f, 0x72, 0x20,
	0x66, 0x65, 0x77, 0x65, 0x72, 0x20, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x20, 0x62, 0x75, 0x74, 0x20, 0x27, 0x20, 0x2b, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x2e, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x29, 0x52, 0x0f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x61, 0x78, 0x42,
	0x82, 0x02, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2e, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x1a, 0x50, 0x72, 0x65, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x62, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2d, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x2d,
	0x72, 0x75, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x42,
	0x50, 0x58, 0xaa, 0x02, 0x12, 0x42, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2e, 0x50, 0x65,
	0x6f, 0x70, 0x6c, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x42, 0x75, 0x66, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x5c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x42,
	0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14,
	0x42, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x3a, 0x3a, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65,
	0x3a, 0x3a, 0x56, 0x31,
})

var file_bufbuild_people_v1_predefined_string_rules_proto_goTypes = []any{
	(*validate.StringRules)(nil), // 0: buf.validate.StringRules
}
var file_bufbuild_people_v1_predefined_string_rules_proto_depIdxs = []int32{
	0, // 0: bufbuild.people.v1.required_medium:extendee -> buf.validate.StringRules
	0, // 1: bufbuild.people.v1.optional_medium:extendee -> buf.validate.StringRules
	0, // 2: bufbuild.people.v1.required_with_max:extendee -> buf.validate.StringRules
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	0, // [0:3] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_bufbuild_people_v1_predefined_string_rules_proto_init() }
func file_bufbuild_people_v1_predefined_string_rules_proto_init() {
	if File_bufbuild_people_v1_predefined_string_rules_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bufbuild_people_v1_predefined_string_rules_proto_rawDesc), len(file_bufbuild_people_v1_predefined_string_rules_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 3,
			NumServices:   0,
		},
		GoTypes:           file_bufbuild_people_v1_predefined_string_rules_proto_goTypes,
		DependencyIndexes: file_bufbuild_people_v1_predefined_string_rules_proto_depIdxs,
		ExtensionInfos:    file_bufbuild_people_v1_predefined_string_rules_proto_extTypes,
	}.Build()
	File_bufbuild_people_v1_predefined_string_rules_proto = out.File
	file_bufbuild_people_v1_predefined_string_rules_proto_goTypes = nil
	file_bufbuild_people_v1_predefined_string_rules_proto_depIdxs = nil
}
